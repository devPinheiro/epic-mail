{
    "swagger": "2.0",
    "info": {
        "title": "EPIC Mail API",
        "description": "This is an email web app that helps people exchange messages/information over the internet.",
        "version": "1.0.0"
    },
    "explore": "true",
    "host": "epic-mail-devp.herokuapp.com",
    "basePath": "/api/v1",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json",
        "multipart/form-data"
    ],
    "produces": [
        "application/json"
    ],
    "security":[{
        "ApiKeyAuth":[]
      }],
    "paths": {
        "/auth/login": {
            
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "POST API endpoint for user login",
                "description": "User Login",
                "parameters": [
                    {
                        "name": "login",
                        "description": "Login params ",
                        "in": "body",
                        "required": "true",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfully"
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "tags": [
                    "Create new User"
                ],
                "summary": "POST API endpoint for creating new user",
                "description": "Create new users",
                "parameters": [
                    {
                        "name": "user",
                        "description": "User params to create new user",
                        "in": "body",
                        "required": "true",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "New user created"
                    }
                }
            }
        },
        "/auth/reset": {
            "post": {
                "tags": [
                    "Reset password"
                ],
                "summary": "POST API endpoint for resetting user's password",
                "description": "reset a user's password",
                "parameters": [
                    {
                        "name": "email",
                        "description": "User email for reset passwrod",
                        "in": "body",
                        "required": "true",
                        "schema": {
                            "$ref": "#/definitions/Reset Password"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Passsword reset was successfull"
                    }
                }
            }
        },
        "/auth/upload": {
            "post": {
                "tags": [
                    "Upload picture"
                ],
                "summary": "POST API endpoint for setting user's profile picture",
                "description": "set user's profile picture",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "avatar",
                        "type":"file",
                        "description": "profile picture upload",
                        "in": "formData",
                        "required": "true"
                    }
                ],
                
                "responses": {
                    "201": {
                        "description": "Profile picture upload was successfull"
                    }
                }
            }
        },
        "/auth/user": {
            "get": {
                "tags": [
                    "User details"
                ],
                "summary": "GET API endpoint for fetching user's data",
                "description": "fetch user's data",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "user's data fetch successfully"
                    }
                }
            }
        },
        "/messages": {
            "post": {
                "tags": [
                    "Compose Mail"
                ],
                "summary": "POST API endpoint for creating new messages",
                "description": "Create email and send",
                "parameters": [
                    {
                        "name": "message",
                        "description": "Message params to create new message",
                        "in": "body",
                        "required": "true",
                        "schema": {
                            "$ref": "#/definitions/Messages"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "new message created"
                    }
                },
                "security":[{
                    "ApiKeyAuth":[]
                  }]
            },
            "get": {
                "tags": [
                    "Inbox"
                ],
                "summary": "GET API endpoint for getting all received mails",
                "description": "Get all received mails",
                "parameters": [
                    {
                        "name": "messages",
                        "type": "string",
                        "description": "fetch all received message/mail fom database",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "all received mails"
                    }
                },
                "security":[{
                    "ApiKeyAuth":[]
                  }]
            }
        },
        "/messages/sent": {
            "parameters": [
                {
                    "name": "messages",
                    "type": "string",
                    "in": "path",
                    "description": "status of the message/mail"
                }
            ],
            "get": {
                "tags": [
                    "Sent"
                ],
                "summary": "GET API endpoint for getting all sent message/mail",
                "description": "fetch all sent message/mail fom database",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "found sent message/mail"
                    }
                },
                "security":[{
                    "ApiKeyAuth":[]
                  }]
            }
        },
        "/messages/draft": {
            "parameters": [
                {
                    "name": "messages",
                    "type": "string",
                    "in": "path",
                    "description": "status of the message/mail"
                }
            ],
            "get": {
                "tags": [
                    "Draft"
                ],
                "summary": "GET API endpoint for getting all draft message/mail",
                "description": "fetch all draft message/mail fom database",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "found draft message/mail"
                    }
                },
                "security":[{
                    "ApiKeyAuth":[]
                  }]
            }
        },
        "/messages/unread": {
            "parameters": [
                {
                    "name": "messages",
                    "type": "string",
                    "in": "path",
                    "description": "status of the message/mail"
                }
            ],
            "get": {
                "tags": [
                    "Unread Messages"
                ],
                "summary": "GET API endpoint for getting all unread message/mail",
                "description": "fetch all unread message/mail fom database",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "found unread message/mail"
                    }
                },
                "security":[{
                    "ApiKeyAuth":[]
                  }]
            }
        },
        "/messages/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "in": "path",
                    "required": "true",
                    "description": "id of the message"
                }
            ],
            "get": {
                "tags": [
                    "Get One Mail"
                ],
                "summary": "GET API endpoint for getting one message/mail",
                "description": "fetch one message/mail fom database",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Found new message/mail"
                    }
                },
                "security":[{
                    "ApiKeyAuth":[]
                  }]
            },
            "delete": {
                "tags": [
                    "Delete Mail"
                ],
                "summary": "DELETE API endpoint for deleting one message/mail",
                "description": "delete one message/mail fom database",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "message/mail deleted successfully"
                    }
                }
            }
        },
        "/messages/retract/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "in": "path",
                    "required": "true",
                    "description": "id of the message"
                }
            ],
            "delete": {
                "tags": [
                    "Retract Mail"
                ],
                "summary": "GET API endpoint for retracting one message/mail",
                "description": "retract a message/mail fom database",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Message/mail retracted"
                    }
                },
                "security":[{
                    "ApiKeyAuth":[]
                  }]
            }
        },
        "/groups": {
            "post": {
                "tags": [
                    "Create Group"
                ],
                "summary": "POST API endpoint for creating new groups",
                "description": "Creating a group",
                "parameters": [
                    {
                        "name": "groups",
                        "description": "params to create new group",
                        "in": "body",
                        "required": "true",
                        "schema": {
                            "$ref": "#/definitions/Groups" 
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "new message created"
                    }
                },
                "security":[{
                    "ApiKeyAuth":[]
                  }]
            },
            "get": {
                "tags": [
                    "All Groups"
                ],
                "summary": "GET API endpoint for getting all groups",
                "description": "Get all groups",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "all created groups"
                    }
                },
                "security":[{
                    "ApiKeyAuth":[]
                  }]
            },
                "security":[{
                    "ApiKeyAuth":[]
                  }]
            },
        "/groups/{id}": {
                
                "get": {
                    "tags": [
                        "One Group"
                    ],
                    "parameters": [
                        {
                            "name": "id",
                            "type": "string",
                            "in": "path",
                            "required": "true",
                            "description": "id of the group"
                        }
                    ],
                    "summary": "GET API endpoint for getting one group",
                    "description": "Get one group",
                    "produces": [
                        "application/json"
                    ],
                    "responses": {
                        "200": {
                            "description": "group fetched successfully"
                        }
                    }
                },
                "patch": {
                    "tags": [
                        "Update Group Name"
                    ],
                    "parameters": [
                        {
                            "name": "id",
                           
                            "in": "path",
                            "required": "true",
                            "description": "id of the group"
                        },
                        {
                            "name":"group name",
                         
                            "required":"true",
                            "in":"body",
                            "description":"new group name",
                            "schema": {
                                "$ref": "#/definitions/Groups" 
                            }
                        }
                    ],
                    "summary": "PATCH API endpoint for updating group name",
                    "description": "Update group name",
                    "produces": [
                        "application/json"
                    ],
                    "responses": {
                        "200": {
                            "description": "groups name updated"
                        }
                    }
                },
                "delete": {
                    "tags": [
                        "Delete Group"
                    ],
                    "parameters": [
                        {
                            "name": "id",
                            "type": "string",
                            "in": "path",
                            "required": "true",
                            "description": "id of the group"
                        }
                    ],
                    "summary": "DELETE API endpoint for deleting groups",
                    "description": "Delete groups",
                    "produces": [
                        "application/json"
                    ],
                    "responses": {
                        "200": {
                            "description": "group deleted"
                        }
                    }
                }
            
            
        },
        "/groups/{id}/users": {
                "post":{
                    "tags": [
                        "Add User to Group"
                    ],
                    "parameters": [
                        {
                            "name": "id",
                           
                            "in": "path",
                            "required": "true",
                            "description": "id of the group"
                        },
                        {
                            "name":"user email",
                        
                            "in":"body",
                            "required":"true",
                            "description":"user email",
                            "schema": {
                                "$ref": "#/definitions/Group Member"
                            }
                        }
                    ],
                    "summary": "POST API endpoint for adding users to group",
                    "description": "add user to group",
                    "produces": [
                        "application/json"
                    ],
                    "responses": {
                        "201": {
                            "description": "user added"
                        }
                    }
           }
        },
        "/groups/{id}/users/{userId}": {
            "delete":{
                "tags": [
                    "Delete User from Group"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": "true",
                        "description": "id of the group"
                    },
                    {
                        "name":"userId",
                        "in":"path",
                        "required":"true",
                        "description":"user id"
                    }
                ],
                "summary": "DELETE API endpoint for deleting users from group",
                "description": "delete user to group",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "user deleted successfully"
                    }
                }
       }
        },
        "/groups/{id}/messages": {
            "post":{
                "tags": [
                    "Compose Group Message"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": "true",
                        "description": "id of the group"
                    },
                    {
                        "name":"message",
                        "in":"body",
                        "required":"true",
                        "description":"mail content",
                        "schema": {
                            "$ref": "#/definitions/Group Messages"
                        }
                    }
                ],
                "summary": "POST API endpoint for composing group message",
                "description": "compose group message",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "message sent successfully"
                    }
                }
       }
    }

    },
       
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "in": "header",
            "name": "x-access-token"
        }
    },
    "definitions": {
        "Login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": 1
                },
                "firstName": {
                    "type": "string",
                    "example": "Andela"
                },
                "lastName": {
                    "type": "string",
                    "example": "EPIC"
                },
                "email": {
                    "type": "string",
                    "example": "epic@andela.com"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                }
            }
        },
        "Messages": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "createdOn": {
                    "type": "Datetime",
                    "example": "Datetime"
                },
                "subject": {
                    "type": "string",
                    "example": "Andela"
                },
                "message": {
                    "type": "string",
                    "example": "You have made it to the Fellowship"
                },
                "parentMessageId": {
                    "type": "integer",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "status": {
                    "type": "string",
                    "description": "message status",
                    "enum": [
                        "sent",
                        "draft",
                        "unread",
                        "read"
                    ]
                }
            }
        },
        "Reset Password":{
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                }
            }
        },
        "Groups": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Andela"
                }
            }
        },
        "Group Member":{
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                }
            }
        },
        "Group Messages":{
            "type": "object",
            "properties": {
                "subject": {
                    "type": "string",
                    "example": "You have made it to the Fellowship"
                },
                "message": {
                    "type": "string",
                    "example": "test@gmail.com You have made it to the Fellowshi"
                }
            }
        }
    }
}